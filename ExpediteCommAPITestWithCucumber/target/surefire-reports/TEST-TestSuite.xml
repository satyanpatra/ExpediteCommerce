<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="TestSuite" time="3.625" tests="3" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="23"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/satyanp/IdeaProjects/ExpediteCommAPITestWithCucumber/target/test-classes:/Users/satyanp/IdeaProjects/ExpediteCommAPITestWithCucumber/target/classes:/Users/satyanp/.m2/repository/io/cucumber/cucumber-java/7.20.1/cucumber-java-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-core/7.20.1/cucumber-core-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-gherkin/7.20.1/cucumber-gherkin-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.20.1/cucumber-gherkin-messages-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/gherkin/28.0.0/gherkin-28.0.0.jar:/Users/satyanp/.m2/repository/io/cucumber/messages/24.1.0/messages-24.1.0.jar:/Users/satyanp/.m2/repository/io/cucumber/testng-xml-formatter/0.2.0/testng-xml-formatter-0.2.0.jar:/Users/satyanp/.m2/repository/io/cucumber/query/12.2.0/query-12.2.0.jar:/Users/satyanp/.m2/repository/io/cucumber/tag-expressions/6.1.0/tag-expressions-6.1.0.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-expressions/17.1.0/cucumber-expressions-17.1.0.jar:/Users/satyanp/.m2/repository/io/cucumber/datatable/7.20.1/datatable-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-plugin/7.20.1/cucumber-plugin-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/docstring/7.20.1/docstring-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/html-formatter/21.7.0/html-formatter-21.7.0.jar:/Users/satyanp/.m2/repository/io/cucumber/junit-xml-formatter/0.5.0/junit-xml-formatter-0.5.0.jar:/Users/satyanp/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/Users/satyanp/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-testng/7.14.0/cucumber-testng-7.14.0.jar:/Users/satyanp/.m2/repository/io/rest-assured/rest-assured/5.5.0/rest-assured-5.5.0.jar:/Users/satyanp/.m2/repository/org/apache/groovy/groovy/4.0.22/groovy-4.0.22.jar:/Users/satyanp/.m2/repository/org/apache/groovy/groovy-xml/4.0.22/groovy-xml-4.0.22.jar:/Users/satyanp/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/Users/satyanp/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar:/Users/satyanp/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/satyanp/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/satyanp/.m2/repository/org/apache/httpcomponents/httpmime/4.5.13/httpmime-4.5.13.jar:/Users/satyanp/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/satyanp/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar:/Users/satyanp/.m2/repository/io/rest-assured/json-path/5.5.0/json-path-5.5.0.jar:/Users/satyanp/.m2/repository/org/apache/groovy/groovy-json/4.0.22/groovy-json-4.0.22.jar:/Users/satyanp/.m2/repository/io/rest-assured/rest-assured-common/5.5.0/rest-assured-common-5.5.0.jar:/Users/satyanp/.m2/repository/io/rest-assured/xml-path/5.5.0/xml-path-5.5.0.jar:/Users/satyanp/.m2/repository/org/apache/commons/commons-lang3/3.11/commons-lang3-3.11.jar:/Users/satyanp/.m2/repository/org/testng/testng/7.10.2/testng-7.10.2.jar:/Users/satyanp/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/satyanp/.m2/repository/com/beust/jcommander/1.82/jcommander-1.82.jar:/Users/satyanp/.m2/repository/org/webjars/jquery/3.7.1/jquery-3.7.1.jar:/Users/satyanp/.m2/repository/org/json/json/20250107/json-20250107.jar:/Users/satyanp/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/satyanp/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/satyanp/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="Asia/Kolkata"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="23"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/23.0.1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/satyanp/IdeaProjects/ExpediteCommAPITestWithCucumber/target/surefire/surefirebooter-20250306195259084_3.jar /Users/satyanp/IdeaProjects/ExpediteCommAPITestWithCucumber/target/surefire 2025-03-06T19-52-59_040-jvmRun1 surefire-20250306195259084_1tmp surefire_0-20250306195259084_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/satyanp/IdeaProjects/ExpediteCommAPITestWithCucumber/target/test-classes:/Users/satyanp/IdeaProjects/ExpediteCommAPITestWithCucumber/target/classes:/Users/satyanp/.m2/repository/io/cucumber/cucumber-java/7.20.1/cucumber-java-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-core/7.20.1/cucumber-core-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-gherkin/7.20.1/cucumber-gherkin-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.20.1/cucumber-gherkin-messages-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/gherkin/28.0.0/gherkin-28.0.0.jar:/Users/satyanp/.m2/repository/io/cucumber/messages/24.1.0/messages-24.1.0.jar:/Users/satyanp/.m2/repository/io/cucumber/testng-xml-formatter/0.2.0/testng-xml-formatter-0.2.0.jar:/Users/satyanp/.m2/repository/io/cucumber/query/12.2.0/query-12.2.0.jar:/Users/satyanp/.m2/repository/io/cucumber/tag-expressions/6.1.0/tag-expressions-6.1.0.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-expressions/17.1.0/cucumber-expressions-17.1.0.jar:/Users/satyanp/.m2/repository/io/cucumber/datatable/7.20.1/datatable-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-plugin/7.20.1/cucumber-plugin-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/docstring/7.20.1/docstring-7.20.1.jar:/Users/satyanp/.m2/repository/io/cucumber/html-formatter/21.7.0/html-formatter-21.7.0.jar:/Users/satyanp/.m2/repository/io/cucumber/junit-xml-formatter/0.5.0/junit-xml-formatter-0.5.0.jar:/Users/satyanp/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/Users/satyanp/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/satyanp/.m2/repository/io/cucumber/cucumber-testng/7.14.0/cucumber-testng-7.14.0.jar:/Users/satyanp/.m2/repository/io/rest-assured/rest-assured/5.5.0/rest-assured-5.5.0.jar:/Users/satyanp/.m2/repository/org/apache/groovy/groovy/4.0.22/groovy-4.0.22.jar:/Users/satyanp/.m2/repository/org/apache/groovy/groovy-xml/4.0.22/groovy-xml-4.0.22.jar:/Users/satyanp/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/Users/satyanp/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar:/Users/satyanp/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/satyanp/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/satyanp/.m2/repository/org/apache/httpcomponents/httpmime/4.5.13/httpmime-4.5.13.jar:/Users/satyanp/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/satyanp/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar:/Users/satyanp/.m2/repository/io/rest-assured/json-path/5.5.0/json-path-5.5.0.jar:/Users/satyanp/.m2/repository/org/apache/groovy/groovy-json/4.0.22/groovy-json-4.0.22.jar:/Users/satyanp/.m2/repository/io/rest-assured/rest-assured-common/5.5.0/rest-assured-common-5.5.0.jar:/Users/satyanp/.m2/repository/io/rest-assured/xml-path/5.5.0/xml-path-5.5.0.jar:/Users/satyanp/.m2/repository/org/apache/commons/commons-lang3/3.11/commons-lang3-3.11.jar:/Users/satyanp/.m2/repository/org/testng/testng/7.10.2/testng-7.10.2.jar:/Users/satyanp/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/Users/satyanp/.m2/repository/com/beust/jcommander/1.82/jcommander-1.82.jar:/Users/satyanp/.m2/repository/org/webjars/jquery/3.7.1/jquery-3.7.1.jar:/Users/satyanp/.m2/repository/org/json/json/20250107/json-20250107.jar:/Users/satyanp/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.1/jackson-databind-2.18.1.jar:/Users/satyanp/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.1/jackson-annotations-2.18.1.jar:/Users/satyanp/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.1/jackson-core-2.18.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/satyanp"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/23.0.1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/satyanp/IdeaProjects/ExpediteCommAPITestWithCucumber"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/satyanp/IdeaProjects/ExpediteCommAPITestWithCucumber/target/surefire/surefirebooter-20250306195259084_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="23.0.1"/>
    <property name="user.name" value="satyanp"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="13.5"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/satyanp/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/q1/s01wkdjd68z4kyvwmv1x6_y40000gn/T/"/>
    <property name="java.version" value="23.0.1"/>
    <property name="user.dir" value="/Users/satyanp/IdeaProjects/ExpediteCommAPITestWithCucumber"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/satyanp/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="23.0.1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="67.0"/>
  </properties>
  <testcase name="runScenario[&quot;Register, Login, and Create Support Case&quot;, &quot;User Registration and Support Case Creation&quot;](1)" classname="runner.TestRunner" time="1.129">
    <system-out><![CDATA[
Scenario Outline: Register, Login, and Create Support Case                                                          # src/test/resources/features/loginpage.feature:13
  Given a user with username "eve.holt" and password "pistol"                                                       # org.satyan.stepdefs.UserRegistrationSteps.aUserWithUsernameAndPassword(java.lang.String,java.lang.String)
Request method:	POST
Request URI:	http://localhost:8080/register
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "password": "pistol",
    "email": "eve.holt"
}
  When the user registers                                                                                           # org.satyan.stepdefs.UserRegistrationSteps.theUserRegisters()
Registration Successful: {"id":4,"token":"QpwL5tke4Pnpja7X4"}
  Then the registration should be successful                                                                        # org.satyan.stepdefs.UserRegistrationSteps.theRegistrationShouldBeSuccessful()
  When the user logs in                                                                                             # org.satyan.stepdefs.UserRegistrationSteps.theUserLogsIn()
Login Successful: {"token":"QpwL5tke4Pnpja7X4"}
  Then the login should be successful and an auth token is returned                                                 # org.satyan.stepdefs.UserRegistrationSteps.theLoginShouldBeSuccessfulAndAnAuthTokenIsReturned()
  When the user creates a support case with title "Test Support Case" and description "This is a test support case" # org.satyan.stepdefs.UserRegistrationSteps.theUserCreatesASupportCaseWithTitleAndDescription(java.lang.String,java.lang.String)
Support Case Created: {"caseId": "98765EBD27Z0T56"}
  Then the support case creation should be successful                                                               # org.satyan.stepdefs.UserRegistrationSteps.theSupportCaseCreationShouldBeSuccessful()
]]></system-out>
    <system-err><![CDATA[SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
]]></system-err>
  </testcase>
  <testcase name="runScenario[&quot;Register, Login, and Create Support Case&quot;, &quot;User Registration and Support Case Creation&quot;](2)" classname="runner.TestRunner" time="0.044">
    <system-out><![CDATA[
Scenario Outline: Register, Login, and Create Support Case                                                          # src/test/resources/features/loginpage.feature:14
  Given a user with username "satyan" and password "password"                                                       # org.satyan.stepdefs.UserRegistrationSteps.aUserWithUsernameAndPassword(java.lang.String,java.lang.String)
Request method:	POST
Request URI:	http://localhost:8080/register
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "password": "password",
    "email": "satyan"
}
  When the user registers                                                                                           # org.satyan.stepdefs.UserRegistrationSteps.theUserRegisters()
Registration Successful: {"id":4,"token":"QpwL5tke4Pnpja7X4"}
  Then the registration should be successful                                                                        # org.satyan.stepdefs.UserRegistrationSteps.theRegistrationShouldBeSuccessful()
  When the user logs in                                                                                             # org.satyan.stepdefs.UserRegistrationSteps.theUserLogsIn()
Login Successful: {"token":"QpwL5tke4Pnpja7X4"}
  Then the login should be successful and an auth token is returned                                                 # org.satyan.stepdefs.UserRegistrationSteps.theLoginShouldBeSuccessfulAndAnAuthTokenIsReturned()
  When the user creates a support case with title "Test Support Case" and description "This is a test support case" # org.satyan.stepdefs.UserRegistrationSteps.theUserCreatesASupportCaseWithTitleAndDescription(java.lang.String,java.lang.String)
Support Case Created: {"caseId": "98765EBD27Z0T56"}
  Then the support case creation should be successful                                                               # org.satyan.stepdefs.UserRegistrationSteps.theSupportCaseCreationShouldBeSuccessful()
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Register, Login, and Create Support Case&quot;, &quot;User Registration and Support Case Creation&quot;](3)" classname="runner.TestRunner" time="0.048">
    <system-out><![CDATA[
Scenario Outline: Register, Login, and Create Support Case                                                          # src/test/resources/features/loginpage.feature:15
  Given a user with username "SatyanP" and password "test123"                                                       # org.satyan.stepdefs.UserRegistrationSteps.aUserWithUsernameAndPassword(java.lang.String,java.lang.String)
Request method:	POST
Request URI:	http://localhost:8080/register
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "password": "test123",
    "email": "SatyanP"
}
  When the user registers                                                                                           # org.satyan.stepdefs.UserRegistrationSteps.theUserRegisters()
Registration Successful: {"id":4,"token":"QpwL5tke4Pnpja7X4"}
  Then the registration should be successful                                                                        # org.satyan.stepdefs.UserRegistrationSteps.theRegistrationShouldBeSuccessful()
  When the user logs in                                                                                             # org.satyan.stepdefs.UserRegistrationSteps.theUserLogsIn()
Login Successful: {"token":"QpwL5tke4Pnpja7X4"}
  Then the login should be successful and an auth token is returned                                                 # org.satyan.stepdefs.UserRegistrationSteps.theLoginShouldBeSuccessfulAndAnAuthTokenIsReturned()
  When the user creates a support case with title "Test Support Case" and description "This is a test support case" # org.satyan.stepdefs.UserRegistrationSteps.theUserCreatesASupportCaseWithTitleAndDescription(java.lang.String,java.lang.String)
Support Case Created: {"caseId": "98765EBD27Z0T56"}
  Then the support case creation should be successful                                                               # org.satyan.stepdefs.UserRegistrationSteps.theSupportCaseCreationShouldBeSuccessful()
]]></system-out>
  </testcase>
</testsuite>